name: Build and Deploy Documentation

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src_docs/**'
      - '_github/workflows/docs.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src_docs/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install mkdocs-material
          pip install mkdocs-minify-plugin
          pip install pymdown-extensions

      - name: Configure Git for MkDocs
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build documentation
        run: |
          cd src_docs
          mkdocs build --verbose --clean --strict

      - name: Verify build output
        run: |
          echo "Build completed. Contents of docs directory:"
          ls -la docs/
          echo "Checking for index.html:"
          ls -la docs/index.html

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v3

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'

  deploy:
    name: Deploy to GitHub Pages
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install validation tools
        run: |
          pip install mkdocs-material
          pip install mkdocs-minify-plugin
          pip install pymdown-extensions

      - name: Validate configuration
        run: |
          cd src_docs
          mkdocs config

      - name: Check for broken links (basic validation)
        run: |
          cd src_docs
          mkdocs build --verbose
          echo "Documentation validation completed"

      - name: Validate markdown files
        run: |
          # Check that all markdown files have proper front matter or content
          find src_docs/md -name "*.md" -exec echo "Checking: {}" \;
          find src_docs/md -name "*.md" -exec head -5 {} \;